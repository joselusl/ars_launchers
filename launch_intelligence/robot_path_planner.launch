<!-- -->
<launch>

  <arg name="flag_use_state_estim" default="False" />
  <arg name="flag_use_slam_map" default="False" />

  <arg name="topic_robot_pose" value="/simulator/sim_robot/robot_pose" if="$(eval flag_use_state_estim == False)"/>
  <arg name="topic_robot_pose" value="/estim_robot_pose" if="$(eval flag_use_state_estim == True)"/>
  
  <arg name="topic_obstacles_world" value="/estim_map_world_sim" if="$(eval flag_use_slam_map == False)"/>
  <arg name="topic_obstacles_world" value="/estim_map_world" if="$(eval flag_use_slam_map == True)"/>

  <arg name="config_param_path_planner_core_yaml_file" default="$(find ars_config_robot_intelligence)/config/path_planner/config_path_planner_core_sim_env.yaml"/>

  <group ns="path_planner">

    <node name="ars_path_planner_core_node" pkg="ars_path_planner" type="ars_path_planner_core_ros_node.py" output="screen" >
      <remap from="robot_pose_des" to="/robot_pose_des"/>      

      <remap from="robot_pose" to="$(arg topic_robot_pose)"/>
      <remap from="obstacles_world" to="$(arg topic_obstacles_world)"/>

      <remap from="robot_trajectory_ref" to="/robot_trajectory_ref"/>
      <remap from="robot_trajectory_ref_raw" to="/robot_trajectory_ref_raw"/>
      
      <param name="config_param_path_planner_core_yaml_file" value="$(arg config_param_path_planner_core_yaml_file)" /> 

    </node>
    
    
    <node name="ars_path_planner_manager_node" pkg="ars_path_planner" type="ars_path_planner_manager_ros_node.py" output="screen" >
      <remap from="robot_pose_des" to="/robot_pose_des"/>      

      <remap from="robot_pose" to="$(arg topic_robot_pose)"/>
      <remap from="obstacles_world" to="$(arg topic_obstacles_world)"/>

      <remap from="robot_trajectory_ref" to="/robot_trajectory_ref"/>
      <remap from="robot_trajectory_ref_raw" to="/robot_trajectory_ref_raw"/>

    </node>
    
  </group>

</launch>
